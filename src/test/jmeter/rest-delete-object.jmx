<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="REST API: objekti kustutamise koormustest" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="restApiHost" elementType="Argument">
            <stringProp name="Argument.name">restApiHost</stringProp>
            <stringProp name="Argument.value">${__P(restApiHost,triinu.girf.ee)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="restApiPort" elementType="Argument">
            <stringProp name="Argument.name">restApiPort</stringProp>
            <stringProp name="Argument.value">${__P(restApiPort,8010)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="parallelRequests" elementType="Argument">
            <stringProp name="Argument.name">parallelRequests</stringProp>
            <stringProp name="Argument.value">${__P(parallelRequests,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampUpPeriod" elementType="Argument">
            <stringProp name="Argument.name">rampUpPeriod</stringProp>
            <stringProp name="Argument.value">${__P(rampUpPeriod,10)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loopCount" elementType="Argument">
            <stringProp name="Argument.name">loopCount</stringProp>
            <stringProp name="Argument.value">${__P(loopCount,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="recordCount" elementType="Argument">
            <stringProp name="Argument.name">recordCount</stringProp>
            <stringProp name="Argument.value">${__P(recordCount,10)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="Warm-up Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1461649959000</longProp>
        <longProp name="ThreadGroup.end_time">1461649959000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="restApiPost warmUp" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;op&quot;:&quot;post&quot;,&quot;path&quot;:&quot;db/main_resource/&quot;,&quot;token&quot;:&quot;testToken&quot;,&quot;data&quot;:{&quot;name&quot;:&quot;LOADTEST&quot;,&quot;owner&quot;:&quot;70001484&quot;,&quot;short_name&quot;:&quot;amph999-test&quot;,&quot;uri&quot;:&quot;urn:fdc:riha.eesti.ee:2016:infosystem:350811-test&quot;,&quot;infosystem_status&quot;:&quot;asutamine_sisestamisel&quot;,&quot;url&quot;:null,&quot;purpose&quot;:null,&quot;formation_date&quot;:null,&quot;take_into_use_date&quot;:null,&quot;xroad_join_date&quot;:null,&quot;access_restriction&quot;:null,&quot;is_access_restriction_for_all&quot;:false,&quot;personal_data&quot;:true,&quot;sensitive_personal_data&quot;:true,&quot;infosystem_type&quot;:&quot;dokumendihaldus&quot;,&quot;groups&quot;:[&quot;infosysteem_grupp_x_teega_liitunud&quot;],&quot;older_data&quot;:&quot;208&quot;,&quot;manner_of_archive_keeping&quot;:&quot;elektrooniline&quot;,&quot;finishing_date&quot;:null,&quot;finishing_description&quot;:null,&quot;data_retention_period_eternal&quot;:false,&quot;differences_from_standard_solution&quot;:null,&quot;uses_xroad&quot;:false,&quot;creator&quot;:&quot;49004186521&quot;,&quot;modifier&quot;:&quot;TEST_ISIKUKOOD&quot;,&quot;modified_date&quot;:&quot;2016-09-14T23:03:57&quot;,&quot;main_resource_id&quot;:350811,&quot;contains_spatial_data&quot;:null,&quot;contains_geo_data&quot;:null,&quot;geo_system&quot;:null,&quot;main_data_contains_geo_data&quot;:null,&quot;geo_meta_data_url&quot;:null,&quot;contains_inspire_data&quot;:null,&quot;contains_address_data&quot;:null,&quot;uses_ads_directly&quot;:null,&quot;infosystems_used_for_address_data&quot;:null,&quot;ads_pk&quot;:null,&quot;ads_link_type&quot;:null,&quot;stored_ads_data&quot;:null,&quot;ads_regular_update&quot;:null,&quot;ads_update_description&quot;:null,&quot;ads_history&quot;:null,&quot;provided_ads_services&quot;:null,&quot;uses_topo_data&quot;:null,&quot;uses_place_names&quot;:null,&quot;status_of_applying_iske&quot;:&quot;kuni_25&quot;,&quot;iske_security_class&quot;:&quot;MADAL&quot;,&quot;service_level/service_time_24x7&quot;:null,&quot;service_level/service_offering_start_time&quot;:null,&quot;service_level/service_offering_end_time&quot;:null,&quot;service_level/service_time_comments&quot;:null,&quot;service_level/incident_initial_response_time&quot;:null,&quot;service_level/service_request_initial_response_time&quot;:null,&quot;service_level/service_consultancy_response_time&quot;:null,&quot;service_level/monthly_average_service_availability&quot;:null,&quot;service_level/max_duration_of_service_interruption&quot;:null,&quot;service_level/acceptable_response_time&quot;:null,&quot;service_level/monthly_average_service_reliability&quot;:null,&quot;service_level/service_load_level&quot;:null,&quot;all_main_data_accessible_through_xroad&quot;:true,&quot;all_main_data_accessible_through_xroad_comment&quot;:null,&quot;all_other_data_loaded_by_xroad&quot;:true,&quot;all_other_data_loaded_by_xroad_comment&quot;:null,&quot;all_public_services_free_for_public_organisations&quot;:true,&quot;all_public_services_free_for_public_organisations_comment&quot;:null,&quot;services_use_only_open_standards&quot;:true,&quot;services_use_only_open_standards_comment&quot;:null,&quot;only_xml_services&quot;:true,&quot;only_xml_services_comment&quot;:null,&quot;services_have_semantic_descriptions&quot;:true,&quot;services_have_semantic_descriptions_comment&quot;:null,&quot;data_structures_have_semantic_descriptions&quot;:true,&quot;data_structures_have_semantic_descriptions_comment&quot;:null,&quot;contains_required_architecture_description&quot;:true,&quot;contains_required_architecture_description_comment&quot;:null,&quot;wcag_usability_level_aa&quot;:true,&quot;wcag_usability_level_aa_comment&quot;:null,&quot;separate_presentation_layer&quot;:true,&quot;separate_presentation_layer_comment&quot;:null,&quot;uses_ads_comment&quot;:null,&quot;only_eid_authentication&quot;:true,&quot;only_eid_authentication_comment&quot;:null,&quot;uses_dvk&quot;:true,&quot;uses_dvk_comment&quot;:null,&quot;classifiers&quot;:[&quot;urn:fdc:riha.eesti.ee:2016:classifier:348961&quot;,&quot;urn:fdc:riha.eesti.ee:2016:classifier:348969&quot;],&quot;organizations&quot;:[{&quot;organization&quot;:&quot;75006753&quot;,&quot;date_from&quot;:&quot;2015-11-09T00:00:00&quot;,&quot;date_to&quot;:&quot;2016-09-17T00:00:00&quot;,&quot;type&quot;:&quot;haldaja&quot;}],&quot;contact_persons&quot;:[{&quot;person&quot;:&quot;49004186521&quot;,&quot;date_from&quot;:&quot;2015-11-09T00:00:00&quot;,&quot;date_to&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;,&quot;organization&quot;:&quot;75006753&quot;,&quot;occupation&quot;:&quot;Kasvataja&quot;,&quot;contact_level&quot;:&quot;operatiivne&quot;,&quot;description&quot;:&quot;&quot;,&quot;role&quot;:&quot;infosysteemiylem&quot;}],&quot;iske_audit&quot;:[{&quot;iske_audit_status&quot;:&quot;auditeerimata&quot;,&quot;iske_audit_date&quot;:&quot;2016-09-02T00:00:00&quot;,&quot;iske_audit_deadline&quot;:&quot;2016-09-16T00:00:00&quot;}],&quot;kind&quot;:&quot;infosystem&quot;, &quot;version&quot;:&quot;1.0.0&quot;}}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${restApiHost}</stringProp>
          <stringProp name="HTTPSampler.port">${restApiPort}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/rest/api</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - ok status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - json response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2066544187">Content-Type: application/json</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="Response Assertion - ok response" enabled="true">
            <stringProp name="JSON_PATH">$[0]</stringProp>
            <stringProp name="EXPECTED_VALUE">^[0-9]+$</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Response - read ID" enabled="true">
            <stringProp name="VAR">deleteId</stringProp>
            <stringProp name="JSONPATH">$[0]</stringProp>
            <stringProp name="DEFAULT"></stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="restApiDelete warmUp" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;op&quot;:&quot;delete&quot;,&quot;path&quot;:&quot;db/main_resource/${deleteId}&quot;,&quot;token&quot;:&quot;testToken&quot;}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${restApiHost}</stringProp>
          <stringProp name="HTTPSampler.port">${restApiPort}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/rest/api</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - ok status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - json response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2066544187">Content-Type: application/json</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="Response Assertion - ok response" enabled="true">
            <stringProp name="JSON_PATH">$.ok</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="JMeter Users" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${parallelRequests}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampUpPeriod}</stringProp>
        <longProp name="ThreadGroup.start_time">1375525852000</longProp>
        <longProp name="ThreadGroup.end_time">1375525852000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="restApiPost" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;op&quot;:&quot;post&quot;,&quot;path&quot;:&quot;db/main_resource/&quot;,&quot;token&quot;:&quot;testToken&quot;,&quot;data&quot;:{&quot;name&quot;:&quot;LOADTEST&quot;,&quot;owner&quot;:&quot;70001484&quot;,&quot;short_name&quot;:&quot;amph999-test&quot;,&quot;uri&quot;:&quot;urn:fdc:riha.eesti.ee:2016:infosystem:350811-test&quot;,&quot;infosystem_status&quot;:&quot;asutamine_sisestamisel&quot;,&quot;url&quot;:null,&quot;purpose&quot;:null,&quot;formation_date&quot;:null,&quot;take_into_use_date&quot;:null,&quot;xroad_join_date&quot;:null,&quot;access_restriction&quot;:null,&quot;is_access_restriction_for_all&quot;:false,&quot;personal_data&quot;:true,&quot;sensitive_personal_data&quot;:true,&quot;infosystem_type&quot;:&quot;dokumendihaldus&quot;,&quot;groups&quot;:[&quot;infosysteem_grupp_x_teega_liitunud&quot;],&quot;older_data&quot;:&quot;208&quot;,&quot;manner_of_archive_keeping&quot;:&quot;elektrooniline&quot;,&quot;finishing_date&quot;:null,&quot;finishing_description&quot;:null,&quot;data_retention_period_eternal&quot;:false,&quot;differences_from_standard_solution&quot;:null,&quot;uses_xroad&quot;:false,&quot;creator&quot;:&quot;49004186521&quot;,&quot;modifier&quot;:&quot;TEST_ISIKUKOOD&quot;,&quot;modified_date&quot;:&quot;2016-09-14T23:03:57&quot;,&quot;main_resource_id&quot;:350811,&quot;contains_spatial_data&quot;:null,&quot;contains_geo_data&quot;:null,&quot;geo_system&quot;:null,&quot;main_data_contains_geo_data&quot;:null,&quot;geo_meta_data_url&quot;:null,&quot;contains_inspire_data&quot;:null,&quot;contains_address_data&quot;:null,&quot;uses_ads_directly&quot;:null,&quot;infosystems_used_for_address_data&quot;:null,&quot;ads_pk&quot;:null,&quot;ads_link_type&quot;:null,&quot;stored_ads_data&quot;:null,&quot;ads_regular_update&quot;:null,&quot;ads_update_description&quot;:null,&quot;ads_history&quot;:null,&quot;provided_ads_services&quot;:null,&quot;uses_topo_data&quot;:null,&quot;uses_place_names&quot;:null,&quot;status_of_applying_iske&quot;:&quot;kuni_25&quot;,&quot;iske_security_class&quot;:&quot;MADAL&quot;,&quot;service_level/service_time_24x7&quot;:null,&quot;service_level/service_offering_start_time&quot;:null,&quot;service_level/service_offering_end_time&quot;:null,&quot;service_level/service_time_comments&quot;:null,&quot;service_level/incident_initial_response_time&quot;:null,&quot;service_level/service_request_initial_response_time&quot;:null,&quot;service_level/service_consultancy_response_time&quot;:null,&quot;service_level/monthly_average_service_availability&quot;:null,&quot;service_level/max_duration_of_service_interruption&quot;:null,&quot;service_level/acceptable_response_time&quot;:null,&quot;service_level/monthly_average_service_reliability&quot;:null,&quot;service_level/service_load_level&quot;:null,&quot;all_main_data_accessible_through_xroad&quot;:true,&quot;all_main_data_accessible_through_xroad_comment&quot;:null,&quot;all_other_data_loaded_by_xroad&quot;:true,&quot;all_other_data_loaded_by_xroad_comment&quot;:null,&quot;all_public_services_free_for_public_organisations&quot;:true,&quot;all_public_services_free_for_public_organisations_comment&quot;:null,&quot;services_use_only_open_standards&quot;:true,&quot;services_use_only_open_standards_comment&quot;:null,&quot;only_xml_services&quot;:true,&quot;only_xml_services_comment&quot;:null,&quot;services_have_semantic_descriptions&quot;:true,&quot;services_have_semantic_descriptions_comment&quot;:null,&quot;data_structures_have_semantic_descriptions&quot;:true,&quot;data_structures_have_semantic_descriptions_comment&quot;:null,&quot;contains_required_architecture_description&quot;:true,&quot;contains_required_architecture_description_comment&quot;:null,&quot;wcag_usability_level_aa&quot;:true,&quot;wcag_usability_level_aa_comment&quot;:null,&quot;separate_presentation_layer&quot;:true,&quot;separate_presentation_layer_comment&quot;:null,&quot;uses_ads_comment&quot;:null,&quot;only_eid_authentication&quot;:true,&quot;only_eid_authentication_comment&quot;:null,&quot;uses_dvk&quot;:true,&quot;uses_dvk_comment&quot;:null,&quot;classifiers&quot;:[&quot;urn:fdc:riha.eesti.ee:2016:classifier:348961&quot;,&quot;urn:fdc:riha.eesti.ee:2016:classifier:348969&quot;],&quot;organizations&quot;:[{&quot;organization&quot;:&quot;75006753&quot;,&quot;date_from&quot;:&quot;2015-11-09T00:00:00&quot;,&quot;date_to&quot;:&quot;2016-09-17T00:00:00&quot;,&quot;type&quot;:&quot;haldaja&quot;}],&quot;contact_persons&quot;:[{&quot;person&quot;:&quot;49004186521&quot;,&quot;date_from&quot;:&quot;2015-11-09T00:00:00&quot;,&quot;date_to&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;,&quot;organization&quot;:&quot;75006753&quot;,&quot;occupation&quot;:&quot;Kasvataja&quot;,&quot;contact_level&quot;:&quot;operatiivne&quot;,&quot;description&quot;:&quot;&quot;,&quot;role&quot;:&quot;infosysteemiylem&quot;}],&quot;iske_audit&quot;:[{&quot;iske_audit_status&quot;:&quot;auditeerimata&quot;,&quot;iske_audit_date&quot;:&quot;2016-09-02T00:00:00&quot;,&quot;iske_audit_deadline&quot;:&quot;2016-09-16T00:00:00&quot;}],&quot;kind&quot;:&quot;infosystem&quot;, &quot;version&quot;:&quot;1.0.0&quot;}}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${restApiHost}</stringProp>
          <stringProp name="HTTPSampler.port">${restApiPort}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/rest/api</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - ok status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - json response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2066544187">Content-Type: application/json</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="Response Assertion - ok response" enabled="true">
            <stringProp name="JSON_PATH">$[0]</stringProp>
            <stringProp name="EXPECTED_VALUE">^[0-9]+$</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Response - read ID" enabled="true">
            <stringProp name="VAR">deleteId</stringProp>
            <stringProp name="JSONPATH">$[0]</stringProp>
            <stringProp name="DEFAULT"></stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="restApiDelete" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;op&quot;:&quot;delete&quot;,&quot;path&quot;:&quot;db/main_resource/${deleteId}&quot;,&quot;token&quot;:&quot;testToken&quot;}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${restApiHost}</stringProp>
          <stringProp name="HTTPSampler.port">${restApiPort}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/rest/api</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - ok status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - json response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2066544187">Content-Type: application/json</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="Response Assertion - ok response" enabled="true">
            <stringProp name="JSON_PATH">$.ok</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename">build/jmeter-report/results.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename">build/jmeter-report/graph.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
